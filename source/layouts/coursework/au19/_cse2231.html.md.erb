This is the second of two courses in the Software Sequence.
For more information, you can access the course website [here](http://web.cse.ohio-state.edu/software/2221/web-sw2/).

This course further embellished on the Object-Oriented Programming concepts taught in CSE 2221,
including abstract classes, kernel class implementations, representations, layering,
client vs. implementer view, concrete vs. abstract state space, representation invariants,
and abstraction functions. Fundamental topics of searching, sorting, hashing, binary search trees,
heaps, and linked-lists were introduced as techniques used in class implementations as well.

In addition, the basics of programming languages and compilation were discussed, including context-free
grammars, abstract syntax/parse trees, recursive-descent parsing, and code generation, along with
other various loose ends, such as interface design and using the Standard Java Library in place
of the [OSU Software Components](http://web.cse.ohio-state.edu/software/common/doc/).

Representative project and lab assignments included:

* Implement various classes in the [OSU Software Components](http://web.cse.ohio-state.edu/software/common/doc/), such as:
    * `NaturalNumber` on `String`
    * `Map` on a hash table
    * `Set` on a binary search tree
    * `SortingMachine` on a heap
    * For more information, see **Various Java Components** under
    *Projects Completed for Coursework*, and **Extra Java Components** under
    *Personal Projects in Progress* in [Projects](../projects/index.html)
* Implement various components of a compiler for a primitive programming language
    * For more information, see **BugsWorld Compiler** under *Projects Completed for Coursework*
    in [Projects](../projects)